## Acceptance platform pipeline. 

name: $(Build.DefinitionName).$(BuildID).$(Rev:.rr)

resources:
 pipelines:
   - pipeline: gluupassport
     source: sign-in-canada.gluu-passport
   - pipeline: shiboxauthauthn3
     source: sign-in-canada.shib-oxauth-authn3

trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  major: 1
  # define b as a counter with the prefix as variable a, and seed as 10.
  minor: $[counter(variables['major'], 10)]

steps:

- script: |
    ls -al $(Pipeline.Workspace)
    cd gluu-server/opt/gluu/jetty/oxauth/custom
    tar -czv --owner=root --group=root -f custom.tgz *
    mv custom.tgz $(Pipeline.Workspace)/s/gluu-server/opt/dist/signincanada
    cd $(Pipeline.Workspace)
    ls -al s/gluu-server/opt/dist/signincanada
    tar -tvf s/gluu-server/opt/dist/signincanada/custom.tgz
  displayName: 'Packaging UI'
  continueOnError: false

- script: |
    echo 'Downloading AppInsights SDK'
    wget https://github.com/microsoft/ApplicationInsights-Java/releases/download/2.6.1/applicationinsights-web-auto-2.6.1.jar \
       -P gluu-server/opt/dist/signincanada
    echo 'Downloading AppInsights Agent'
    wget https://github.com/microsoft/ApplicationInsights-Java/releases/download/2.6.1/applicationinsights-agent-2.6.1.jar \
       -P gluu-server/opt/azure
    ls -al 
  displayName: 'Downloading AppInsights'
  continueOnError: false

- script: |
    echo 'Downloading Latest Amazon Corretto'
    wget https://corretto.aws/downloads/resources/8.242.08.1/amazon-corretto-8.242.08.1-linux-x64.tar.gz \
      -O gluu-server/opt/dist/corretto/amazon-corretto-8-x64-linux-jdk.tar.gz
    wget https://corretto.aws/downloads/resources/8.242.08.1/amazon-corretto-8.242.08.1-linux-x64.tar.gz.sig \
      -O gluu-server/opt/dist/corretto/amazon-corretto-8-x64-linux-jdk.tar.gz.sig
    echo 'Checking file integritiy'
    gpg --import gluu-server/opt/dist/corretto/B04F24E3.pub
    gpg gluu-server/opt/dist/corretto/amazon-corretto-8-x64-linux-jdk.tar.gz.sig
  displayName: 'Downloading Latest Amazon Corretto'
  continueOnError: false

- task: DownloadPipelineArtifact@2
  inputs:
    buildType: 'specific'
    project: '7302639f-e704-47c3-9557-99b4e04a75bc'
    definition: '285'
    buildVersionToDownload: 'latest'
    artifactName: 'gluu-passport'
    targetPath: '$(Pipeline.Workspace)/s/gluu-server/opt/dist/gluu'
  displayName: 'Download gluu-passport tarballs'
  continueOnError: false

- task: DownloadPipelineArtifact@2
  inputs:
    buildType: 'specific'
    project: '7302639f-e704-47c3-9557-99b4e04a75bc'
    definition: '288'
    buildVersionToDownload: 'latest'
    artifactName: 'shib-oxauth-authn3'
    targetPath: '$(Pipeline.Workspace)/s/gluu-server/opt/dist/signincanada'
  displayName: 'Downloading shib-oxauth-authn3 libs'

- script: |
    cd gluu-server/opt/dist/signincanada
    mkdir shibjar && tar -C shibjar -xvf shib-oxauth-authn3-4.1.0.sic1.tar
    cp shibjar/shib-oxauth-authn3-4.1.0.sic1/edit-webapp/WEB-INF/lib/shib-oxauth-authn3-4.1.0.sic1.jar .
    rm -rf shib-oxauth-authn3-4.1.0.sic1.tar && rm -rf shib-oxauth-authn3-4.1.0.sic1.zip && rm -rf shibjar
    ls -al 
  displayName: 'Moving Shiboleth Jar'

- script: |
    cd gluu-server/opt/dist/gluu
    mv package/*gz .
    rm -rf package
    ls -al 
    cd $(Pipeline.Workspace)/s
  displayName: 'Moving gluu packages'
  continueOnError: true

- script: |
    pushd gluu-server/
    echo 'packaging tarball'
    chmod 755 $(find . -type d -print)
    chmod 644 $(find . -type f -print)
    chmod 700 opt/dist/signincanada/postinstall.sh
    chmod 700 opt/dist/scripts/azure/keyvault.sh
    chmod 700 opt/dist/scripts/crlcheck.sh
    chmod 700 install/community-edition-setup/setup.py
    tar -czv --owner=root --group=root -f $(Build.ArtifactStagingDirectory)/SIC-AP-0.0.$(minor).tgz --exclude='opt/gluu' *
    openssl sha256 $(Build.ArtifactStagingDirectory)/SIC-AP-0.0.$(minor).tgz > $(Build.ArtifactStagingDirectory)/SIC-AP-0.0.$(minor).tgz.sha
    popd
    tar -czv --owner=root --group=root -f $(Build.ArtifactStagingDirectory)/SIC-Admintools-0.0.$(minor).tgz administration
  displayName: 'Packaging tarball'
  continueOnError: true

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    artifact: 'acceptance-platform'
    publishLocation: 'pipeline'